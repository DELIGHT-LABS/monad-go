/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  10143: {
    Protocol: {
      address: "0x05c6a7d1221f793Fb6c7E7CF6635f3105110046d",
      abi: [
        {
          inputs: [],
          name: "InvalidInitialization",
          type: "error",
        },
        {
          inputs: [],
          name: "NotInitializing",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "int256",
              name: "delivery_request_index",
              type: "int256",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "order_index",
              type: "int256",
            },
          ],
          name: "ConfirmDelivery",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user_addr",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "store_addr",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "deliver_addr",
              type: "address",
            },
          ],
          name: "ConfirmOrder",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint64",
              name: "version",
              type: "uint64",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "int256",
              name: "order_index",
              type: "int256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "store_address",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "user_address",
              type: "string",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "distance",
              type: "int256",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "total_price",
              type: "int256",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "delivery_fee",
              type: "int256",
            },
          ],
          name: "OrderMenu",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "int256",
              name: "price",
              type: "int256",
            },
            {
              internalType: "string",
              name: "image_url",
              type: "string",
            },
          ],
          name: "addMenu",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int256",
              name: "delivery_request_index",
              type: "int256",
            },
          ],
          name: "approveDelivery",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int256",
              name: "order_index",
              type: "int256",
            },
          ],
          name: "confirmOrder",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "deliverMap",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "deliveryRequestMap",
          outputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "user_addr",
              type: "address",
            },
            {
              internalType: "address",
              name: "store_addr",
              type: "address",
            },
            {
              internalType: "address",
              name: "deliver_addr",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "order_index",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "store_address",
              type: "address",
            },
          ],
          name: "getStoreMenu",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "index",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "store_address",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "int256",
                  name: "price",
                  type: "int256",
                },
                {
                  internalType: "string",
                  name: "image_url",
                  type: "string",
                },
              ],
              internalType: "struct Menu[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getStores",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "addr",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "int256",
                  name: "pos",
                  type: "int256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
              ],
              internalType: "struct Store[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "initializeMockData",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int256[]",
              name: "menu_index",
              type: "int256[]",
            },
          ],
          name: "order",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "orderMap",
          outputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "int256",
              name: "total_price",
              type: "int256",
            },
            {
              internalType: "int256",
              name: "request_index",
              type: "int256",
            },
            {
              internalType: "int256",
              name: "delivery_fee",
              type: "int256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "pending_delivery",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          name: "registerDeliver",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "int256",
              name: "pos",
              type: "int256",
            },
          ],
          name: "registerStore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "int256",
              name: "pos",
              type: "int256",
            },
          ],
          name: "registerUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user_addr",
              type: "address",
            },
          ],
          name: "removeDelivery",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "int256",
              name: "menu_index",
              type: "int256",
            },
          ],
          name: "removeMenu",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user_addr",
              type: "address",
            },
          ],
          name: "removeStore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user_addr",
              type: "address",
            },
          ],
          name: "removeUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "storeMap",
          outputs: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "int256",
              name: "pos",
              type: "int256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "storeMenuMap",
          outputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "store_address",
              type: "address",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "int256",
              name: "price",
              type: "int256",
            },
            {
              internalType: "string",
              name: "image_url",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "stores",
          outputs: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "int256",
              name: "pos",
              type: "int256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userMap",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "int256",
              name: "pos",
              type: "int256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userOrderMap",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "wti_price",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        addMenu: "contracts/interface/IProtocol.sol",
        approveDelivery: "contracts/interface/IProtocol.sol",
        confirmOrder: "contracts/interface/IProtocol.sol",
        order: "contracts/interface/IProtocol.sol",
        registerDeliver: "contracts/interface/IProtocol.sol",
        registerStore: "contracts/interface/IProtocol.sol",
        registerUser: "contracts/interface/IProtocol.sol",
        removeDelivery: "contracts/interface/IProtocol.sol",
        removeMenu: "contracts/interface/IProtocol.sol",
        removeStore: "contracts/interface/IProtocol.sol",
        removeUser: "contracts/interface/IProtocol.sol",
        owner: "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        renounceOwnership: "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        transferOwnership: "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
