{
  "address": "0xBc2fcbCc0fB8076f3f6F7B4c47365e4730aF48E0",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delivery_request_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "order_index",
          "type": "uint256"
        }
      ],
      "name": "ConfirmDelivery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "store_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "deliver_addr",
          "type": "address"
        }
      ],
      "name": "ConfirmOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "order_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "store_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "distance",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "total_price",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delivery_fee",
          "type": "int256"
        }
      ],
      "name": "OrderMenu",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GetOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "menu",
              "type": "uint256[]"
            },
            {
              "internalType": "int256",
              "name": "total_price",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "request_index",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "delivery_fee",
              "type": "int256"
            }
          ],
          "internalType": "struct Order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "image_url",
          "type": "string"
        }
      ],
      "name": "addMenu",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delivery_request_index",
          "type": "uint256"
        }
      ],
      "name": "approveDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "order_index",
          "type": "uint256"
        }
      ],
      "name": "confirmOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deliverMap",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deliveryRequests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "store_addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "deliver_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "order_index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "store_address",
          "type": "address"
        }
      ],
      "name": "getStoreMenu",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "store_address",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            },
            {
              "internalType": "string",
              "name": "image_url",
              "type": "string"
            }
          ],
          "internalType": "struct Menu[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStores",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "int256",
              "name": "pos",
              "type": "int256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Store[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeMockData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "store_address",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "menu_index",
          "type": "uint256[]"
        }
      ],
      "name": "order",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "total_price",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "request_index",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "delivery_fee",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "total_price",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "request_index",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "delivery_fee",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pending_delivery",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "registerDeliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        }
      ],
      "name": "registerStore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        }
      ],
      "name": "removeDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "menu_index",
          "type": "uint256"
        }
      ],
      "name": "removeMenu",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        }
      ],
      "name": "removeStore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "storeMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storeMenuMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "store_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "image_url",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stores",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userMap",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userOrderMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wti_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x869a91a1933c22f4b3d574cc934717e2d7fccbc1e2111aae129c7b61c7f86dc9",
  "receipt": {
    "to": null,
    "from": "0x1e06bd9904C05Ec472D665b7E654b6265BA40c33",
    "contractAddress": "0xBc2fcbCc0fB8076f3f6F7B4c47365e4730aF48E0",
    "transactionIndex": 38,
    "gasUsed": "3522666",
    "logsBloom": "0x
    "blockHash": "0xf3cda65525523e4ea9b614f08dc732d141c09b38bd76c52b3365ba5f0f2d22b8",
    "transactionHash": "0x869a91a1933c22f4b3d574cc934717e2d7fccbc1e2111aae129c7b61c7f86dc9",
    "logs": [],
    "blockNumber": 25890831,
    "cumulativeGasUsed": "11070202",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "259001e165f9717608586693fd79b2a7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delivery_request_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"order_index\",\"type\":\"uint256\"}],\"name\":\"ConfirmDelivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"store_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deliver_addr\",\"type\":\"address\"}],\"name\":\"ConfirmOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"order_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"distance\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"total_price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delivery_fee\",\"type\":\"int256\"}],\"name\":\"OrderMenu\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GetOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"menu\",\"type\":\"uint256[]\"},{\"internalType\":\"int256\",\"name\":\"total_price\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"request_index\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"delivery_fee\",\"type\":\"int256\"}],\"internalType\":\"struct Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"image_url\",\"type\":\"string\"}],\"name\":\"addMenu\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delivery_request_index\",\"type\":\"uint256\"}],\"name\":\"approveDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"order_index\",\"type\":\"uint256\"}],\"name\":\"confirmOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deliverMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deliveryRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"store_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliver_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"order_index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"}],\"name\":\"getStoreMenu\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"image_url\",\"type\":\"string\"}],\"internalType\":\"struct Menu[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStores\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Store[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeMockData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"menu_index\",\"type\":\"uint256[]\"}],\"name\":\"order\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"total_price\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"request_index\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"delivery_fee\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"total_price\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"request_index\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"delivery_fee\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pending_delivery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"registerDeliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"}],\"name\":\"registerStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"removeDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"menu_index\",\"type\":\"uint256\"}],\"name\":\"removeMenu\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"removeStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"storeMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"storeMenuMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"image_url\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stores\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrderMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wti_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Protocol.sol\":\"Protocol\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"contracts/Protocol.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport { Initializable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport { OwnableUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"./interface/IProtocol.sol\\\";\\n\\nstruct User {\\n    string name;\\n    address addr;\\n    string location;\\n    int256 pos;\\n}\\n\\nstruct Store {\\n    address addr;\\n    string location;\\n    int256 pos;\\n    string name;\\n    string description;\\n}\\n\\nstruct Menu {\\n    uint256 index;\\n    address store_address;\\n    string name;\\n    string description;\\n    int256 price;\\n    string image_url;\\n}\\n\\nstruct Order {\\n    uint256 index;\\n    uint256[] menu;\\n    int256 total_price;\\n    uint256 request_index;\\n    int256 delivery_fee;\\n}\\n\\nstruct Deliver {\\n    string name;\\n    address addr;\\n}\\n\\nstruct Delivery_Request {\\n    uint256 index;\\n    address user_addr;\\n    address store_addr;\\n    address deliver_addr;\\n    uint256 order_index;\\n}\\n\\ncontract Protocol is IProtocol, Initializable, OwnableUpgradeable {\\n    // \\uc9c0\\ubd88 \\ud1a0\\ud070 \\uc8fc\\uc18c\\n    uint256 public wti_price;\\n\\n    Store[] public stores;\\n    mapping(address => User) public userMap;\\n    mapping(address => Store) public storeMap;\\n    mapping(address => Deliver) public deliverMap;\\n    // store address\\ub85c menu index\\uc758 list\\ub9e4\\ud551\\n    mapping(address => Menu[]) public storeMenuMap;\\n\\n    // \\uc694\\uccad\\ud55c \\uc720\\uc800\\uc758 \\uc8fc\\uc18c -> delivery_request index[]\\n    mapping(address => uint256[]) public userOrderMap;\\n    // order index -> order\\n    Order[] public orders;\\n    mapping(address => Order[]) public orderMap;\\n    // delivery_requset index\\n    Delivery_Request[] public deliveryRequests;\\n    // mapping(uint256 => Delivery_Request) public deliveryRequestMap;\\n    // delivery request index\\n    uint256[] public pending_delivery;\\n\\n    function initialize() public initializer {\\n        __Ownable_init(msg.sender);\\n\\n        // --- \\ubaa9(Mock) \\ub370\\uc774\\ud130 \\ucd08\\uae30\\ud654 ---\\n        initializeMockData();\\n\\n        wti_price = 1;\\n\\n    }\\n\\n    function initializeMockData() public onlyOwner {\\n        // 1. \\uc720\\uc800 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d\\n        userMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f] = User({\\n            name: unicode\\\"\\uae40\\ucca0\\uc218\\\",\\n            addr: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            location: unicode\\\"\\uc11c\\uc6b8\\uc2dc \\uac15\\ub0a8\\uad6c \\uc5ed\\uc0bc\\ub3d9\\\",\\n            pos: 1\\n        });\\n\\n        // 2. \\uc0c1\\uc810 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d\\n        storeMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f] = Store({\\n            addr: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            location: unicode\\\"\\uc11c\\uc6b8\\uc2dc \\uac15\\ub0a8\\uad6c \\ud14c\\ud5e4\\ub780\\ub85c\\\",\\n            pos: 2,\\n            name: unicode\\\"\\ud669\\uae08\\ubc18\\uc810\\\",\\n            description: unicode\\\"\\uc804\\ud1b5 \\uc911\\ud654\\uc694\\ub9ac \\uc804\\ubb38\\uc810, 30\\ub144 \\ub0b4\\uacf5\\uc758 \\ub9db\\\"\\n        });\\n        storeMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7] = Store({\\n            addr: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            location: unicode\\\"\\uc11c\\uc6b8\\uc2dc \\uc11c\\ucd08\\uad6c \\ubc18\\ud3ec\\ub3d9\\\",\\n            pos: 3,\\n            name: unicode\\\"\\ub9db\\ub098\\ubd84\\uc2dd\\\",\\n            description: unicode\\\"\\ucd94\\uc5b5\\uc758 \\ub9db, \\ub5a1\\ubcf6\\uc774\\uc640 \\uae40\\ubc25\\\"\\n        });\\n\\n        // 3. \\ubc30\\ub2ec\\uc6d0 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d\\n        deliverMap[0x1FfF36fABa6Bd6507a08d3296ef60e4fd6b15095] = Deliver({\\n            addr: 0x1FfF36fABa6Bd6507a08d3296ef60e4fd6b15095,\\n            name: unicode\\\"\\uc2a4\\ud53c\\ub4dc\\ub9e8\\\"\\n        });\\n\\n        // 4. \\uba54\\ub274 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d (storeMenuMap\\uc5d0 push)\\n        storeMenuMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f].push(Menu({\\n            index: 0,\\n            store_address: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            name: unicode\\\"\\uc9dc\\uc7a5\\uba74\\\",\\n            description: unicode\\\"\\uae30\\ubcf8\\uc5d0 \\ucda9\\uc2e4\\ud55c \\uc9dc\\uc7a5\\uba74\\\",\\n            price: 7000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNTA0MjlfMTM1%2FMDAxNzQ1OTAwMTQ0Njk2.YtBTUQUwQVnUBLEomgr-PggTodTsna6ThCbVKRWhG4gg.tt8bP14sKO91Ui99Y0GBU9NzFGFDcSJrLp_LtL9EyY0g.PNG%2FChatGPT_Image_2025%25B3%25E2_4%25BF%25F9_29%25C0%25CF_%25BF%25C0%25C8%25C4_01_14_08.png&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f].push(Menu({\\n            index: 1,\\n            store_address: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            name: unicode\\\"\\uc9ec\\ubf55\\\",\\n            description: unicode\\\"\\uc5bc\\ud070\\ud558\\uace0 \\uc2dc\\uc6d0\\ud55c \\uc9ec\\ubf55\\\",\\n            price: 9000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNDEyMTZfMTcx%2FMDAxNzM0MzA2NjYwODYw.hQ2hOniGyiUfXq_JyZTkU6kuqC0qp0SBafvJtWd1sK0g.Nv3QClhLyI0xeh-iw4gGKrj6-M0tu64E5hxDquUCyPIg.JPEG%2FIMG_5899.jpg&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7].push(Menu({\\n            index: 0,\\n            store_address: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            name: unicode\\\"\\ub5a1\\ubcf6\\uc774\\\",\\n            description: unicode\\\"\\ub9e4\\ucf64\\ub2ec\\ucf64\\ud55c \\uad6d\\ubbfc \\uac04\\uc2dd\\\",\\n            price: 5000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNTA1MDFfNDcg%2FMDAxNzQ2MDQ3ODg5ODY1.BbklCP5HUAZwfdoLMC5vncldEe3nXtkMKXy0_UPuIQ4g.6f7xOtSDBBKSf--CMP9LBYVOKD7VD9-TYFbVzJv530og.PNG%2Fcb914beb-a20b-49c6-beee-6bbedea5dde1.png&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7].push(Menu({\\n            index: 1,\\n            store_address: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            name: unicode\\\"\\uae40\\ubc25\\\",\\n            description: unicode\\\"\\uc18d\\uc774 \\uaf49 \\ucc2c \\ub9db\\uc788\\ub294 \\uae40\\ubc25\\\",\\n            price: 3000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNDEyMjFfMjE1%2FMDAxNzM0NzgwNzE1OTM4.usw9AVVnHxzFSVsRIf8cunnnrcrPlp4h7Kb_2Q2yKdsg.5ug6RW5y_p5xdHKahorGms0OTAceY0Kghoob9qszjNMg.JPEG%2F%25B1%25E8%25B9%25E4_024.jpg&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7].push(Menu({\\n            index: 2,\\n            store_address: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            name: unicode\\\"\\uc21c\\ub300\\\",\\n            description: unicode\\\"\\ucac4\\uae43\\ud558\\uace0 \\uace0\\uc18c\\ud55c \\uc21c\\ub300\\\",\\n            price: 4000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fshopping.phinf.naver.net%2Fmain_5330441%2F53304411993.3.20250306104652.jpg&type=sc960_832\\\"\\n        }));\\n    }\\n\\n    function registerUser(string calldata name, string calldata location, int256 pos) external override {\\n        require(bytes(userMap[msg.sender].name).length == 0, \\\"User already registered\\\");\\n        \\n        userMap[msg.sender] = User({\\n            name: name,\\n            addr: msg.sender,\\n            location: location,\\n            pos: pos\\n        });\\n    }\\n\\n    function getStores() public view returns(Store[] memory) {\\n        return stores;\\n    }\\n\\n    function registerStore(string calldata name, string calldata description, string calldata location, int256 pos) external override {\\n        require(bytes(storeMap[msg.sender].name).length == 0, \\\"Store already registered\\\");\\n\\n        storeMap[msg.sender] = Store({\\n            name: name,\\n            description: description,\\n            addr: msg.sender,\\n            location: location,\\n            pos: pos\\n        });\\n\\n        stores.push(storeMap[msg.sender]);\\n    }\\n    function registerDeliver(string calldata name) external override {\\n        require(bytes(deliverMap[msg.sender].name).length == 0, \\\"Deliver already registered\\\");\\n\\n        deliverMap[msg.sender] = Deliver({\\n            addr: msg.sender,\\n            name: name\\n        });\\n    }\\n\\n    function addMenu(string calldata name, string calldata description, int256 price, string calldata image_url) external override {\\n        require(bytes(storeMap[msg.sender].name).length != 0, \\\"Not found stores\\\");\\n\\n        storeMenuMap[msg.sender].push(Menu({\\n            index: storeMenuMap[msg.sender].length,\\n            name: name,\\n            store_address: msg.sender,\\n            description: description,\\n            price: price,\\n            image_url: image_url\\n        }));\\n    }\\n\\n    function getStoreMenu(address store_address) public view returns(Menu[] memory) {\\n        return storeMenuMap[store_address];\\n    }\\n\\n    function removeMenu(uint256 menu_index) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function removeUser(address user_addr) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function removeStore(address user_addr) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function removeDelivery(address user_addr) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    \\n    function order(address store_address, uint256[] memory menu_index) external payable override {\\n        require(bytes(userMap[msg.sender].name).length != 0, \\\"Not found user\\\");\\n        require(bytes(storeMap[store_address].name).length != 0, \\\"Not found store\\\");\\n\\n        uint256 order_ind = orders.length;\\n\\n        Delivery_Request memory delivery_request = Delivery_Request({\\n            index: deliveryRequests.length,\\n            order_index: orders.length,\\n            user_addr: msg.sender,\\n            store_addr: store_address,\\n            deliver_addr: address(0)\\n        });\\n\\n        int256 total_price = 0;\\n        for (uint256 index = 0; index <= menu_index.length; index++){\\n            if (storeMenuMap[store_address].length > 0 && bytes(storeMenuMap[store_address][index].name).length != 0){\\n                Menu memory menu = storeMenuMap[store_address][index];\\n                total_price += menu.price;\\n            }\\n        }\\n\\n        // delivery fee\\n        int256 distance = (storeMap[store_address].pos - userMap[msg.sender].pos);\\n        int256 delivery_fee = distance * 1;\\n\\n        orders.push(Order({\\n            index: orders.length,\\n            menu: menu_index,\\n            total_price: total_price,\\n            delivery_fee: delivery_fee,\\n            request_index: delivery_request.index\\n        }));\\n\\n        orderMap[msg.sender].push(orders[order_ind]);\\n\\n        emit OrderMenu(order_ind, store_address, msg.sender, distance, total_price, delivery_fee);\\n    }\\n\\n    function GetOrders() external returns(Order[] memory){\\n        return  orderMap[msg.sender];\\n    }\\n\\n    function approveDelivery(uint256 delivery_request_index) external override {\\n        deliveryRequests[delivery_request_index].deliver_addr = msg.sender;\\n\\n        emit ConfirmDelivery(delivery_request_index, deliveryRequests[delivery_request_index].index);\\n    }\\n\\n    function confirmOrder(uint256 order_index) external payable override {\\n        // orders[order_index].request_index\\n        // payable().transfer()\\n    }\\n}\",\"keccak256\":\"0x1314788569e9cdfc2ba19c91285c7af741d6381a437a360c407fa5fb310a20e5\"},\"contracts/interface/IProtocol.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IProtocol {\\n    // user, \\uac00\\uac8c, deliver \\ub4f1\\ub85d\\n    function registerUser(string calldata name, string calldata location, int256 pos) external;\\n    function registerStore(string calldata name, string calldata description, string calldata location, int256 pos) external;\\n    function registerDeliver(string calldata name) external;\\n\\n    // \\uba54\\ub274 \\ub4f1\\ub85d\\n    function addMenu(string calldata name, string calldata description, int256 price, string calldata image_url) external ;\\n\\n    // user, store, deliver, menu \\uc81c\\uac70\\n    function removeMenu(uint256 menu_index) external;\\n    function removeUser(address user_addr) external;\\n    function removeStore(address user_addr) external;\\n    function removeDelivery(address user_addr) external;\\n\\n    function order(address store_address,uint256[] memory menu_index) external payable;\\n    function approveDelivery(uint256 delivery_request_index) external;\\n\\n    function confirmOrder(uint256 order_index) external payable;\\n\\n\\n    // event\\n    event OrderMenu(uint256 order_index, address store_address, address user_address, int256 distance, int256 total_price, int256 delivery_fee);\\n    event ConfirmDelivery(uint256 delivery_request_index, uint256 order_index);\\n    event ConfirmOrder(\\n      address user_addr,\\n      address store_addr,\\n      address deliver_addr\\n    );\\n}\",\"keccak256\":\"0x2b2ee223ab787ef8f0889c45e9fc13d0e5a9b0092debaedf436792edae0596dd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 584,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "wti_price",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 588,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "stores",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Store)535_storage)dyn_storage"
      },
      {
        "astId": 593,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "userMap",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(User)524_storage)"
      },
      {
        "astId": 598,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "storeMap",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Store)535_storage)"
      },
      {
        "astId": 603,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "deliverMap",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Deliver)565_storage)"
      },
      {
        "astId": 609,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "storeMenuMap",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(Menu)548_storage)dyn_storage)"
      },
      {
        "astId": 614,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "userOrderMap",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 618,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "orders",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_struct(Order)560_storage)dyn_storage"
      },
      {
        "astId": 624,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "orderMap",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_array(t_struct(Order)560_storage)dyn_storage)"
      },
      {
        "astId": 628,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "deliveryRequests",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_struct(Delivery_Request)576_storage)dyn_storage"
      },
      {
        "astId": 631,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "pending_delivery",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Delivery_Request)576_storage)dyn_storage": {
        "base": "t_struct(Delivery_Request)576_storage",
        "encoding": "dynamic_array",
        "label": "struct Delivery_Request[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Menu)548_storage)dyn_storage": {
        "base": "t_struct(Menu)548_storage",
        "encoding": "dynamic_array",
        "label": "struct Menu[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Order)560_storage)dyn_storage": {
        "base": "t_struct(Order)560_storage",
        "encoding": "dynamic_array",
        "label": "struct Order[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Store)535_storage)dyn_storage": {
        "base": "t_struct(Store)535_storage",
        "encoding": "dynamic_array",
        "label": "struct Store[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(Menu)548_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Menu[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Menu)548_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_struct(Order)560_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Order[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Order)560_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Deliver)565_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Deliver)",
        "numberOfBytes": "32",
        "value": "t_struct(Deliver)565_storage"
      },
      "t_mapping(t_address,t_struct(Store)535_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Store)",
        "numberOfBytes": "32",
        "value": "t_struct(Store)535_storage"
      },
      "t_mapping(t_address,t_struct(User)524_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)524_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Deliver)565_storage": {
        "encoding": "inplace",
        "label": "struct Deliver",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 564,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "addr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Delivery_Request)576_storage": {
        "encoding": "inplace",
        "label": "struct Delivery_Request",
        "members": [
          {
            "astId": 567,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 569,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "user_addr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 571,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "store_addr",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 573,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "deliver_addr",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 575,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "order_index",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Menu)548_storage": {
        "encoding": "inplace",
        "label": "struct Menu",
        "members": [
          {
            "astId": 537,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 539,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "store_address",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 541,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 543,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 545,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_int256"
          },
          {
            "astId": 547,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "image_url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Order)560_storage": {
        "encoding": "inplace",
        "label": "struct Order",
        "members": [
          {
            "astId": 550,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 553,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "menu",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 555,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "total_price",
            "offset": 0,
            "slot": "2",
            "type": "t_int256"
          },
          {
            "astId": 557,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "request_index",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 559,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "delivery_fee",
            "offset": 0,
            "slot": "4",
            "type": "t_int256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Store)535_storage": {
        "encoding": "inplace",
        "label": "struct Store",
        "members": [
          {
            "astId": 526,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 528,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "location",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 530,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "pos",
            "offset": 0,
            "slot": "2",
            "type": "t_int256"
          },
          {
            "astId": 532,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 534,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "description",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(User)524_storage": {
        "encoding": "inplace",
        "label": "struct User",
        "members": [
          {
            "astId": 517,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 519,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "addr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 521,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "location",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 523,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "pos",
            "offset": 0,
            "slot": "3",
            "type": "t_int256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}