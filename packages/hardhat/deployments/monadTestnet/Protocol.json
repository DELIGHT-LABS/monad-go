{
  "address": "0x05c6a7d1221f793Fb6c7E7CF6635f3105110046d",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delivery_request_index",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "order_index",
          "type": "int256"
        }
      ],
      "name": "ConfirmDelivery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "store_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "deliver_addr",
          "type": "address"
        }
      ],
      "name": "ConfirmOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "order_index",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "store_address",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "user_address",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "distance",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "total_price",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delivery_fee",
          "type": "int256"
        }
      ],
      "name": "OrderMenu",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "image_url",
          "type": "string"
        }
      ],
      "name": "addMenu",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "delivery_request_index",
          "type": "int256"
        }
      ],
      "name": "approveDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "order_index",
          "type": "int256"
        }
      ],
      "name": "confirmOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deliverMap",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deliveryRequestMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "store_addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "deliver_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "order_index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "store_address",
          "type": "address"
        }
      ],
      "name": "getStoreMenu",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "store_address",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            },
            {
              "internalType": "string",
              "name": "image_url",
              "type": "string"
            }
          ],
          "internalType": "struct Menu[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStores",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "int256",
              "name": "pos",
              "type": "int256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "internalType": "struct Store[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeMockData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "menu_index",
          "type": "int256[]"
        }
      ],
      "name": "order",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "total_price",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "request_index",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "delivery_fee",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pending_delivery",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "registerDeliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        }
      ],
      "name": "registerStore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        }
      ],
      "name": "removeDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "menu_index",
          "type": "int256"
        }
      ],
      "name": "removeMenu",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        }
      ],
      "name": "removeStore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_addr",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "storeMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storeMenuMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "store_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "image_url",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stores",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userMap",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "int256",
          "name": "pos",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userOrderMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wti_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9167edd58a12cfb0a311f583889ba7817e970012f63956ac2b3c8d81aebf73f",
  "receipt": {
    "to": null,
    "from": "0x1e06bd9904C05Ec472D665b7E654b6265BA40c33",
    "contractAddress": "0x05c6a7d1221f793Fb6c7E7CF6635f3105110046d",
    "transactionIndex": 5,
    "gasUsed": "2931254",
    "logsBloom": "0x
    "blockHash": "0xe7153ad7d0472b6881f4240d6877078af7ed08d0c5ae9121b223e6e3656bf1db",
    "transactionHash": "0xb9167edd58a12cfb0a311f583889ba7817e970012f63956ac2b3c8d81aebf73f",
    "logs": [],
    "blockNumber": 25886228,
    "cumulativeGasUsed": "3566297",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "55223a991b90472a4909457ed14f3162",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delivery_request_index\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"order_index\",\"type\":\"int256\"}],\"name\":\"ConfirmDelivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"store_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deliver_addr\",\"type\":\"address\"}],\"name\":\"ConfirmOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"order_index\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"store_address\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"user_address\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"distance\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"total_price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delivery_fee\",\"type\":\"int256\"}],\"name\":\"OrderMenu\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"image_url\",\"type\":\"string\"}],\"name\":\"addMenu\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"delivery_request_index\",\"type\":\"int256\"}],\"name\":\"approveDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"order_index\",\"type\":\"int256\"}],\"name\":\"confirmOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deliverMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deliveryRequestMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"store_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliver_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"order_index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"}],\"name\":\"getStoreMenu\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"image_url\",\"type\":\"string\"}],\"internalType\":\"struct Menu[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStores\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct Store[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeMockData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"menu_index\",\"type\":\"int256[]\"}],\"name\":\"order\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"total_price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"request_index\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"delivery_fee\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pending_delivery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"registerDeliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"}],\"name\":\"registerStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"removeDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"menu_index\",\"type\":\"int256\"}],\"name\":\"removeMenu\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"removeStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_addr\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"storeMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"storeMenuMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"store_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"image_url\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stores\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userMap\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"pos\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userOrderMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wti_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Protocol.sol\":\"Protocol\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"contracts/Protocol.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\nimport { Initializable } from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport { OwnableUpgradeable } from \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"./interface/IProtocol.sol\\\";\\n\\nstruct User {\\n    string name;\\n    address addr;\\n    string location;\\n    int256 pos;\\n}\\n\\nstruct Store {\\n    address addr;\\n    string location;\\n    int256 pos;\\n    string name;\\n    string description;\\n}\\n\\nstruct Menu {\\n    uint256 index;\\n    address store_address;\\n    string name;\\n    string description;\\n    int256 price;\\n    string image_url;\\n}\\n\\nstruct Order {\\n    uint256 index;\\n    int256[] menu;\\n    int256 total_price;\\n    int256 request_index;\\n    int256 delivery_fee;\\n}\\n\\nstruct Deliver {\\n    string name;\\n    address addr;\\n}\\n\\nstruct Delivery_Request {\\n    uint256 index;\\n    address user_addr;\\n    address store_addr;\\n    address deliver_addr;\\n    uint256 order_index;\\n}\\n\\ncontract Protocol is IProtocol, Initializable, OwnableUpgradeable {\\n    // \\uc9c0\\ubd88 \\ud1a0\\ud070 \\uc8fc\\uc18c\\n    uint256 public wti_price;\\n\\n    Store[] public stores;\\n    mapping(address => User) public userMap;\\n    mapping(address => Store) public storeMap;\\n    mapping(address => Deliver) public deliverMap;\\n    // store address\\ub85c menu index\\uc758 list\\ub9e4\\ud551\\n    mapping(address => Menu[]) public storeMenuMap;\\n\\n    // \\uc694\\uccad\\ud55c \\uc720\\uc800\\uc758 \\uc8fc\\uc18c -> delivery_request index[]\\n    mapping(address => uint256[]) public userOrderMap;\\n    // order index -> order\\n    mapping(uint256 => Order) public orderMap;\\n    // delivery_requset index\\n    mapping(uint256 => Delivery_Request) public deliveryRequestMap;\\n    // delivery request index\\n    uint256[] public pending_delivery;\\n\\n    function initialize() public initializer {\\n        __Ownable_init(msg.sender);\\n\\n        // --- \\ubaa9(Mock) \\ub370\\uc774\\ud130 \\ucd08\\uae30\\ud654 ---\\n        initializeMockData();\\n\\n        wti_price = 1;\\n\\n    }\\n\\n    function initializeMockData() public onlyOwner {\\n        // 1. \\uc720\\uc800 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d\\n        userMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f] = User({\\n            name: unicode\\\"\\uae40\\ucca0\\uc218\\\",\\n            addr: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            location: unicode\\\"\\uc11c\\uc6b8\\uc2dc \\uac15\\ub0a8\\uad6c \\uc5ed\\uc0bc\\ub3d9\\\",\\n            pos: 1\\n        });\\n\\n        // 2. \\uc0c1\\uc810 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d\\n        storeMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f] = Store({\\n            addr: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            location: unicode\\\"\\uc11c\\uc6b8\\uc2dc \\uac15\\ub0a8\\uad6c \\ud14c\\ud5e4\\ub780\\ub85c\\\",\\n            pos: 2,\\n            name: unicode\\\"\\ud669\\uae08\\ubc18\\uc810\\\",\\n            description: unicode\\\"\\uc804\\ud1b5 \\uc911\\ud654\\uc694\\ub9ac \\uc804\\ubb38\\uc810, 30\\ub144 \\ub0b4\\uacf5\\uc758 \\ub9db\\\"\\n        });\\n        storeMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7] = Store({\\n            addr: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            location: unicode\\\"\\uc11c\\uc6b8\\uc2dc \\uc11c\\ucd08\\uad6c \\ubc18\\ud3ec\\ub3d9\\\",\\n            pos: 3,\\n            name: unicode\\\"\\ub9db\\ub098\\ubd84\\uc2dd\\\",\\n            description: unicode\\\"\\ucd94\\uc5b5\\uc758 \\ub9db, \\ub5a1\\ubcf6\\uc774\\uc640 \\uae40\\ubc25\\\"\\n        });\\n\\n        // 3. \\ubc30\\ub2ec\\uc6d0 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d\\n        deliverMap[0x1FfF36fABa6Bd6507a08d3296ef60e4fd6b15095] = Deliver({\\n            addr: 0x1FfF36fABa6Bd6507a08d3296ef60e4fd6b15095,\\n            name: unicode\\\"\\uc2a4\\ud53c\\ub4dc\\ub9e8\\\"\\n        });\\n\\n        // 4. \\uba54\\ub274 \\ub370\\uc774\\ud130 \\ub4f1\\ub85d (storeMenuMap\\uc5d0 push)\\n        storeMenuMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f].push(Menu({\\n            index: 0,\\n            store_address: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            name: unicode\\\"\\uc9dc\\uc7a5\\uba74\\\",\\n            description: unicode\\\"\\uae30\\ubcf8\\uc5d0 \\ucda9\\uc2e4\\ud55c \\uc9dc\\uc7a5\\uba74\\\",\\n            price: 7000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNTA0MjlfMTM1%2FMDAxNzQ1OTAwMTQ0Njk2.YtBTUQUwQVnUBLEomgr-PggTodTsna6ThCbVKRWhG4gg.tt8bP14sKO91Ui99Y0GBU9NzFGFDcSJrLp_LtL9EyY0g.PNG%2FChatGPT_Image_2025%25B3%25E2_4%25BF%25F9_29%25C0%25CF_%25BF%25C0%25C8%25C4_01_14_08.png&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0xc638cfF5173bE947494207FE67B76460EBeaA23f].push(Menu({\\n            index: 1,\\n            store_address: 0xc638cfF5173bE947494207FE67B76460EBeaA23f,\\n            name: unicode\\\"\\uc9ec\\ubf55\\\",\\n            description: unicode\\\"\\uc5bc\\ud070\\ud558\\uace0 \\uc2dc\\uc6d0\\ud55c \\uc9ec\\ubf55\\\",\\n            price: 9000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNDEyMTZfMTcx%2FMDAxNzM0MzA2NjYwODYw.hQ2hOniGyiUfXq_JyZTkU6kuqC0qp0SBafvJtWd1sK0g.Nv3QClhLyI0xeh-iw4gGKrj6-M0tu64E5hxDquUCyPIg.JPEG%2FIMG_5899.jpg&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7].push(Menu({\\n            index: 0,\\n            store_address: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            name: unicode\\\"\\ub5a1\\ubcf6\\uc774\\\",\\n            description: unicode\\\"\\ub9e4\\ucf64\\ub2ec\\ucf64\\ud55c \\uad6d\\ubbfc \\uac04\\uc2dd\\\",\\n            price: 5000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNTA1MDFfNDcg%2FMDAxNzQ2MDQ3ODg5ODY1.BbklCP5HUAZwfdoLMC5vncldEe3nXtkMKXy0_UPuIQ4g.6f7xOtSDBBKSf--CMP9LBYVOKD7VD9-TYFbVzJv530og.PNG%2Fcb914beb-a20b-49c6-beee-6bbedea5dde1.png&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7].push(Menu({\\n            index: 1,\\n            store_address: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            name: unicode\\\"\\uae40\\ubc25\\\",\\n            description: unicode\\\"\\uc18d\\uc774 \\uaf49 \\ucc2c \\ub9db\\uc788\\ub294 \\uae40\\ubc25\\\",\\n            price: 3000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyNDEyMjFfMjE1%2FMDAxNzM0NzgwNzE1OTM4.usw9AVVnHxzFSVsRIf8cunnnrcrPlp4h7Kb_2Q2yKdsg.5ug6RW5y_p5xdHKahorGms0OTAceY0Kghoob9qszjNMg.JPEG%2F%25B1%25E8%25B9%25E4_024.jpg&type=sc960_832\\\"\\n        }));\\n        storeMenuMap[0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7].push(Menu({\\n            index: 2,\\n            store_address: 0x9206a132Ae7Ffa929f50EF8551c21B387f5234C7,\\n            name: unicode\\\"\\uc21c\\ub300\\\",\\n            description: unicode\\\"\\ucac4\\uae43\\ud558\\uace0 \\uace0\\uc18c\\ud55c \\uc21c\\ub300\\\",\\n            price: 4000,\\n            image_url: \\\"https://search.pstatic.net/common/?src=http%3A%2F%2Fshopping.phinf.naver.net%2Fmain_5330441%2F53304411993.3.20250306104652.jpg&type=sc960_832\\\"\\n        }));\\n    }\\n\\n    function registerUser(string calldata name, string calldata location, int256 pos) external override {\\n        require(bytes(userMap[msg.sender].name).length == 0, \\\"User already registered\\\");\\n        \\n        userMap[msg.sender] = User({\\n            name: name,\\n            addr: msg.sender,\\n            location: location,\\n            pos: pos\\n        });\\n    }\\n\\n    function getStores() public view returns(Store[] memory) {\\n        return stores;\\n    }\\n\\n    function registerStore(string calldata name, string calldata description, string calldata location, int256 pos) external override {\\n        require(bytes(storeMap[msg.sender].name).length == 0, \\\"Store already registered\\\");\\n\\n        storeMap[msg.sender] = Store({\\n            name: name,\\n            description: description,\\n            addr: msg.sender,\\n            location: location,\\n            pos: pos\\n        });\\n\\n        stores.push(storeMap[msg.sender]);\\n    }\\n    function registerDeliver(string calldata name) external override {\\n        require(bytes(deliverMap[msg.sender].name).length == 0, \\\"Deliver already registered\\\");\\n\\n        deliverMap[msg.sender] = Deliver({\\n            addr: msg.sender,\\n            name: name\\n        });\\n    }\\n\\n    function addMenu(string calldata name, string calldata description, int256 price, string calldata image_url) external override {\\n        require(bytes(storeMap[msg.sender].name).length != 0, \\\"Not found stores\\\");\\n\\n        storeMenuMap[msg.sender].push(Menu({\\n            index: storeMenuMap[msg.sender].length+1,\\n            name: name,\\n            store_address: msg.sender,\\n            description: description,\\n            price: price,\\n            image_url: image_url\\n        }));\\n    }\\n\\n    function getStoreMenu(address store_address) public view returns(Menu[] memory) {\\n        return storeMenuMap[store_address];\\n    }\\n\\n    function removeMenu(int256 menu_index) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function removeUser(address user_addr) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function removeStore(address user_addr) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function removeDelivery(address user_addr) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function order(int256[] calldata menu_index) external payable override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function approveDelivery(int256 delivery_request_index) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n    function confirmOrder(int256 order_index) external override {\\n        revert(\\\"Unimplemented\\\");\\n    }\\n}\",\"keccak256\":\"0xa0a1dd042e90d93094ac76c016ea851b3be41286a980c3887502888a186ee3e5\"},\"contracts/interface/IProtocol.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IProtocol {\\n    // user, \\uac00\\uac8c, deliver \\ub4f1\\ub85d\\n    function registerUser(string calldata name, string calldata location, int256 pos) external;\\n    function registerStore(string calldata name, string calldata description, string calldata location, int256 pos) external;\\n    function registerDeliver(string calldata name) external;\\n\\n    // \\uba54\\ub274 \\ub4f1\\ub85d\\n    function addMenu(string calldata name, string calldata description, int256 price, string calldata image_url) external;\\n\\n    // user, store, deliver, menu \\uc81c\\uac70\\n    function removeMenu(int256 menu_index) external;\\n    function removeUser(address user_addr) external;\\n    function removeStore(address user_addr) external;\\n    function removeDelivery(address user_addr) external;\\n\\n    function order(int256[] calldata menu_index) external payable;\\n    function approveDelivery(int256 delivery_request_index) external;\\n\\n    function confirmOrder(int256 order_index) external;\\n\\n\\n    // event\\n    event OrderMenu(int256 order_index, string store_address, string user_address, int256 distance, int256 total_price, int256 delivery_fee);\\n    event ConfirmDelivery(int256 delivery_request_index, int256 order_index);\\n    event ConfirmOrder(\\n      address user_addr,\\n      address store_addr,\\n      address deliver_addr\\n    );\\n}\",\"keccak256\":\"0xa7b6f02f0a5e23dacd28f29c2c8a0975200acb23cd56ca1f2019804efb6b26a2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061339e806100206000396000f3fe6080604052600436106101b75760003560e01c80638da5cb5b116100ec578063d7b1c0a91161008a578063e8a59cd811610064578063e8a59cd81461053f578063ed4d758e1461055f578063f00845531461057f578063f2fde38b1461059557600080fd5b8063d7b1c0a9146102d2578063e4f89b68146104f2578063e80fd77a1461051257600080fd5b8063b302368a116100c6578063b302368a14610464578063b4d7002514610496578063c710ea95146104a4578063ca37f772146104d257600080fd5b80638da5cb5b1461041d5780638dbe1a171461024e578063985751881461024e57600080fd5b8063416a933a116101595780635e3e554a116101335780635e3e554a146103b0578063715018a6146103de5780638129fc1c146103f357806388478c861461040857600080fd5b8063416a933a1461035d578063424731f4146102d25780635dc917f01461038e57600080fd5b80632765c626116101955780632765c626146102d25780632bcc23f8146102ed5780632d4e5ca71461031d57806338ad2f821461033d57600080fd5b80630518778c146101bc57806318c839171461024e5780631cf3cd0714610270575b600080fd5b3480156101c857600080fd5b506102136101d73660046125d6565b6008602052600090815260409020805460018201546002830154600384015460049094015492936001600160a01b039283169391831692169085565b604080519586526001600160a01b039485166020870152928416928501929092529091166060830152608082015260a0015b60405180910390f35b34801561025a57600080fd5b5061026e61026936600461260b565b6105b5565b005b34801561027c57600080fd5b506102b261028b3660046125d6565b60076020526000908152604090208054600282015460038301546004909301549192909184565b604080519485526020850193909352918301526060820152608001610245565b3480156102de57600080fd5b5061026e6102693660046125d6565b3480156102f957600080fd5b5061030d61030836600461260b565b6105f2565b6040516102459493929190612673565b34801561032957600080fd5b5061026e610338366004612702565b610739565b34801561034957600080fd5b5061026e610358366004612744565b61082f565b34801561036957600080fd5b5061037d61037836600461260b565b61098e565b6040516102459594939291906127b8565b34801561039a57600080fd5b506103a3610b5f565b6040516102459190612814565b3480156103bc57600080fd5b506103d06103cb36600461260b565b610d94565b6040516102459291906128d6565b3480156103ea57600080fd5b5061026e610e41565b3480156103ff57600080fd5b5061026e610e55565b34801561041457600080fd5b5061026e610f5d565b34801561042957600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610245565b34801561047057600080fd5b5061048461047f366004612900565b611b03565b6040516102459695949392919061292a565b61026e61026936600461298d565b3480156104b057600080fd5b506104c46104bf3660046125d6565b611cfb565b604051908152602001610245565b3480156104de57600080fd5b5061026e6104ed366004612a02565b611d1c565b3480156104fe57600080fd5b5061026e61050d366004612aa5565b611fa2565b34801561051e57600080fd5b5061053261052d36600461260b565b612184565b6040516102459190612b49565b34801561054b57600080fd5b5061037d61055a3660046125d6565b6123d9565b34801561056b57600080fd5b506104c461057a366004612900565b612418565b34801561058b57600080fd5b506104c460005481565b3480156105a157600080fd5b5061026e6105b036600461260b565b612449565b60405162461bcd60e51b815260206004820152600d60248201526c155b9a5b5c1b195b595b9d1959609a1b60448201526064015b60405180910390fd5b60026020526000908152604090208054819061060d90612c08565b80601f016020809104026020016040519081016040528092919081815260200182805461063990612c08565b80156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b505050600184015460028501805494956001600160a01b039092169491935091506106b090612c08565b80601f01602080910402602001604051908101604052809291908181526020018280546106dc90612c08565b80156107295780601f106106fe57610100808354040283529160200191610729565b820191906000526020600020905b81548152906001019060200180831161070c57829003601f168201915b5050505050908060030154905084565b336000908152600460205260409020805461075390612c08565b1590506107a25760405162461bcd60e51b815260206004820152601a60248201527f44656c6976657220616c7265616479207265676973746572656400000000000060448201526064016105e9565b6040805160606020601f8501819004028201810183529181018381529091829190859085908190850183828082843760009201829052509385525050336020938401819052825250600490915260409020815181906108019082612ca6565b5060209190910151600190910180546001600160a01b0319166001600160a01b039092169190911790555050565b336000908152600260205260409020805461084990612c08565b1590506108985760405162461bcd60e51b815260206004820152601760248201527f5573657220616c7265616479207265676973746572656400000000000000000060448201526064016105e9565b604051806080016040528086868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360208083019190915260408051601f87018390048302810183018252868152920191908690869081908401838280828437600092018290525093855250505060209182018490523381526002909152604090208151819061093e9082612ca6565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604082015160028201906109799082612ca6565b50606082015181600301559050505050505050565b600360205260009081526040902080546001820180546001600160a01b0390921692916109ba90612c08565b80601f01602080910402602001604051908101604052809291908181526020018280546109e690612c08565b8015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b505050505090806002015490806003018054610a4e90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7a90612c08565b8015610ac75780601f10610a9c57610100808354040283529160200191610ac7565b820191906000526020600020905b815481529060010190602001808311610aaa57829003601f168201915b505050505090806004018054610adc90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0890612c08565b8015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b5050505050905085565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610d8b5760008481526020908190206040805160a081019091526005850290910180546001600160a01b031682526001810180549293919291840191610bcc90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf890612c08565b8015610c455780601f10610c1a57610100808354040283529160200191610c45565b820191906000526020600020905b815481529060010190602001808311610c2857829003601f168201915b5050505050815260200160028201548152602001600382018054610c6890612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9490612c08565b8015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b50505050508152602001600482018054610cfa90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2690612c08565b8015610d735780601f10610d4857610100808354040283529160200191610d73565b820191906000526020600020905b815481529060010190602001808311610d5657829003601f168201915b50505050508152505081526020019060010190610b83565b50505050905090565b600460205260009081526040902080548190610daf90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddb90612c08565b8015610e285780601f10610dfd57610100808354040283529160200191610e28565b820191906000526020600020905b815481529060010190602001808311610e0b57829003601f168201915b505050600190930154919250506001600160a01b031682565b610e49612487565b610e5360006124e2565b565b6000610e5f612553565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610e875750825b905060008267ffffffffffffffff166001148015610ea45750303b155b905081158015610eb2575080155b15610ed05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610efa57845460ff60401b1916600160401b1785555b610f033361257e565b610f0b610f5d565b60016000558315610f5657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b610f65612487565b6040805160c081018252600960808201908152681d57301d96541d911360bb1b60a0830152815273c638cff5173be947494207fe67b76460ebeaa23f602080830182905283518085018552601d81527fec849cec9ab8ec8b9c20eab095eb82a8eab5ac20ec97adec82bceb8f99000000818301529383019390935260016060830152600052600290915280517fd1da8ca8f339b260695aee18b6d8ac988db01c7397319e6b4a86adfb01acacbd90819061101f9082612ca6565b5060208201516001820180546001600160a01b0319166001600160a01b039092169190911790556040820151600282019061105a9082612ca6565b50606082015181600301559050506040518060a0016040528073c638cff5173be947494207fe67b76460ebeaa23f6001600160a01b031681526020016040518060400160405280602081526020017fec849cec9ab8ec8b9c20eab095eb82a8eab5ac20ed858ced97a4eb9e80eba19c8152508152602001600281526020016040518060400160405280600c81526020016b0ed99a9eab888ebb098eca0960a41b8152508152602001604051806060016040528060328152602001612e5b60329139905273c638cff5173be947494207fe67b76460ebeaa23f6000526003602090815281517f8e1c89b3fead8a93669f80bca42c9c459a70cf9f9bc2ac488867e50ac237f67180546001600160a01b0319166001600160a01b03909216919091178155908201517f8e1c89b3fead8a93669f80bca42c9c459a70cf9f9bc2ac488867e50ac237f672906111ac9082612ca6565b5060408201516002820155606082015160038201906111cb9082612ca6565b50608082015160048201906111e09082612ca6565b509050506040518060a00160405280739206a132ae7ffa929f50ef8551c21b387f5234c76001600160a01b031681526020016040518060400160405280601d81526020017fec849cec9ab8ec8b9c20ec849cecb488eab5ac20ebb098ed8faceb8f990000008152508152602001600381526020016040518060400160405280600c81526020016beba79beb8298ebb684ec8b9d60a01b81525081526020016040518060600160405280602281526020016130b3602291399052739206a132ae7ffa929f50ef8551c21b387f5234c76000526003602090815281517f2fe2541f3252a6e9441186d3bbc154c5ea7b7e0cbce2a6573e15f98b15b32a6a80546001600160a01b0319166001600160a01b03909216919091178155908201517f2fe2541f3252a6e9441186d3bbc154c5ea7b7e0cbce2a6573e15f98b15b32a6b906113289082612ca6565b5060408201516002820155606082015160038201906113479082612ca6565b506080820151600482019061135c9082612ca6565b505060408051608081018252600c9181019182526b1d91549db2979d72739d74f560a31b6060820152908152731fff36faba6bd6507a08d3296ef60e4fd6b1509560208083018290526000919091526004905280519091507f1945f37ee62370e499a1865bd2a17b62a154803a62fc3b3828c65c7cabf39ac79081906113e29082612ca6565b5060209182015160019190910180546001600160a01b0319166001600160a01b0390921691909117905573c638cff5173be947494207fe67b76460ebeaa23f6000818152600583526040805160c081018252918252818401929092528151808301835260098152683b29e73b27a97aea6d60ba1b818501528183015281518083018352601d81527feab8b0ebb3b8ec979020ecb6a9ec8ba4ed959c20eca79cec9ea5eba9b4000000818501526060820152611b586080820152815161016081019092526101388083527f9d73629023593ab2528f17e6f1dffc9ce319c3437c0ba3ea9577a9a778d5c18b93919260a0840192909190612f7b908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b03909416939093179092556040810151909190600282019061153b9082612ca6565b50606082015160038201906115509082612ca6565b506080820151600482015560a0820151600582019061156f9082612ca6565b505073c638cff5173be947494207fe67b76460ebeaa23f6000819052600560209081526040805160c0810182526001815280830193909352805180820182526006815265eca7acebbd9560d01b818401528382015280518082018252601d81527fec96bced81b0ed9598eab3a020ec8b9cec9b90ed959c20eca7acebbd9500000081840152606084015261232860808401528051610120810190915260ee8082527f9d73629023593ab2528f17e6f1dffc9ce319c3437c0ba3ea9577a9a778d5c18b945060a0840192612e8d908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b03909416939093179092556040810151909190600282019061169c9082612ca6565b50606082015160038201906116b19082612ca6565b506080820151600482015560a082015160058201906116d09082612ca6565b5050739206a132ae7ffa929f50ef8551c21b387f5234c76000818152600560209081526040805160c081018252928352828201939093528251808401845260098152683ae5a87aecedbb276d60ba1b818301528284015282518084018452601d81527feba7a4ecbda4eb8bacecbda4ed959c20eab5adebafbc20eab084ec8b9d0000008183015260608301526113886080830152825161014081019093526101098084527f1653958163627abfda763d15a3b05480f6046276a44266f63d93e403b829f40c9450919260a084019290916130d5908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b0390941693909317909255604081015190919060028201906118049082612ca6565b50606082015160038201906118199082612ca6565b506080820151600482015560a082015160058201906118389082612ca6565b5050739206a132ae7ffa929f50ef8551c21b387f5234c76000819052600560209081526040805160c0810182526001815280830193909352805180820182526006815265eab980ebb0a560d01b818401528382015280518082018252601f81527fec868dec9db420eabd8920ecb0ac20eba79bec9e88eb8a9420eab980ebb0a500818401526060840152610bb860808401528051610120810190915260fe8082527f1653958163627abfda763d15a3b05480f6046276a44266f63d93e403b829f40c945060a08401926131de908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b0390941693909317909255604081015190919060028201906119659082612ca6565b506060820151600382019061197a9082612ca6565b506080820151600482015560a082015160058201906119999082612ca6565b5050739206a132ae7ffa929f50ef8551c21b387f5234c76000819052600560209081526040805160c08082018352600282528184019490945281518083018352600681526501d91139d71960d71b818501528183015281518083018352601d81527fecab84eab983ed9598eab3a020eab3a0ec868ced959c20ec889ceb8c80000000818501526060820152610fa060808201528151938401909152608d8084527f1653958163627abfda763d15a3b05480f6046276a44266f63d93e403b829f40c9450909260a08401929091906132dc908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b039094169390931790925560408101519091906002820190611aca9082612ca6565b5060608201516003820190611adf9082612ca6565b506080820151600482015560a08201516005820190611afe9082612ca6565b505050565b60056020528160005260406000208181548110611b1f57600080fd5b60009182526020909120600690910201805460018201546002830180549295506001600160a01b03909116935090611b5690612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8290612c08565b8015611bcf5780601f10611ba457610100808354040283529160200191611bcf565b820191906000526020600020905b815481529060010190602001808311611bb257829003601f168201915b505050505090806003018054611be490612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1090612c08565b8015611c5d5780601f10611c3257610100808354040283529160200191611c5d565b820191906000526020600020905b815481529060010190602001808311611c4057829003601f168201915b505050505090806004015490806005018054611c7890612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054611ca490612c08565b8015611cf15780601f10611cc657610100808354040283529160200191611cf1565b820191906000526020600020905b815481529060010190602001808311611cd457829003601f168201915b5050505050905086565b60098181548110611d0b57600080fd5b600091825260209091200154905081565b336000908152600360208190526040909120018054611d3a90612c08565b159050611d895760405162461bcd60e51b815260206004820152601860248201527f53746f726520616c72656164792072656769737465726564000000000000000060448201526064016105e9565b6040518060a00160405280336001600160a01b0316815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820184905260408051601f8b0183900483028101830182528a8152920191908a908a9081908401838280828437600092019190915250505090825250604080516020601f8901819004810282018101909252878152918101919088908890819084018382808284376000920182905250939094525050338152600360209081526040909120835181546001600160a01b0319166001600160a01b03909116178155908301519091506001820190611e969082612ca6565b506040820151600282015560608201516003820190611eb59082612ca6565b5060808201516004820190611eca9082612ca6565b505033600090815260036020526040812060018054808201825592819052815460059093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810180546001600160a01b0319166001600160a01b03959095169490941784559193507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790910190611f6490840182612d66565b506002820154816002015560038201816003019081611f839190612d66565b50600481810190611f9690840182612d66565b50505050505050505050565b336000908152600360208190526040909120018054611fc090612c08565b90506000036120045760405162461bcd60e51b815260206004820152601060248201526f4e6f7420666f756e642073746f72657360801b60448201526064016105e9565b3360009081526005602052604090819020815160c0810190925280549091908190612030906001612e39565b8152602001336001600160a01b0316815260200189898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250602080820187905260408051601f87018390048302810183018252868152920191908690869081908401838280828437600092018290525093909452505083546001808201865594825260209182902084516006909202019081559083015193810180546001600160a01b0319166001600160a01b039095169490941790935550604081015190919060028201906121509082612ca6565b50606082015160038201906121659082612ca6565b506080820151600482015560a08201516005820190611f969082612ca6565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b828210156123ce5760008481526020908190206040805160c081018252600686029092018054835260018101546001600160a01b0316938301939093526002830180549293929184019161220f90612c08565b80601f016020809104026020016040519081016040528092919081815260200182805461223b90612c08565b80156122885780601f1061225d57610100808354040283529160200191612288565b820191906000526020600020905b81548152906001019060200180831161226b57829003601f168201915b505050505081526020016003820180546122a190612c08565b80601f01602080910402602001604051908101604052809291908181526020018280546122cd90612c08565b801561231a5780601f106122ef5761010080835404028352916020019161231a565b820191906000526020600020905b8154815290600101906020018083116122fd57829003601f168201915b505050505081526020016004820154815260200160058201805461233d90612c08565b80601f016020809104026020016040519081016040528092919081815260200182805461236990612c08565b80156123b65780601f1061238b576101008083540402835291602001916123b6565b820191906000526020600020905b81548152906001019060200180831161239957829003601f168201915b505050505081525050815260200190600101906121bc565b505050509050919050565b600181815481106123e957600080fd5b6000918252602090912060059091020180546001820180546001600160a01b039092169350906109ba90612c08565b6006602052816000526040600020818154811061243457600080fd5b90600052602060002001600091509150505481565b612451612487565b6001600160a01b03811661247b57604051631e4fbdf760e01b8152600060048201526024016105e9565b612484816124e2565b50565b336124b97f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610e535760405163118cdaa760e01b81523360048201526024016105e9565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b61258661258f565b612484816125b4565b6125976125bc565b610e5357604051631afcd79f60e31b815260040160405180910390fd5b61245161258f565b60006125c6612553565b54600160401b900460ff16919050565b6000602082840312156125e857600080fd5b5035919050565b80356001600160a01b038116811461260657600080fd5b919050565b60006020828403121561261d57600080fd5b612626826125ef565b9392505050565b6000815180845260005b8181101561265357602081850181015186830182015201612637565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000612686608083018761262d565b6001600160a01b038616602084015282810360408401526126a7818661262d565b91505082606083015295945050505050565b60008083601f8401126126cb57600080fd5b50813567ffffffffffffffff8111156126e357600080fd5b6020830191508360208285010111156126fb57600080fd5b9250929050565b6000806020838503121561271557600080fd5b823567ffffffffffffffff81111561272c57600080fd5b612738858286016126b9565b90969095509350505050565b60008060008060006060868803121561275c57600080fd5b853567ffffffffffffffff8082111561277457600080fd5b61278089838a016126b9565b9097509550602088013591508082111561279957600080fd5b506127a6888289016126b9565b96999598509660400135949350505050565b6001600160a01b038616815260a0602082018190526000906127dc9083018761262d565b85604084015282810360608401526127f4818661262d565b90508281036080840152612808818561262d565b98975050505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156128c857888303603f19018552815180516001600160a01b031684528781015160a0898601819052906128748287018261262d565b915050878201518886015260608083015186830382880152612896838261262d565b92505050608080830151925085820381870152506128b4818361262d565b96890196945050509086019060010161283b565b509098975050505050505050565b6040815260006128e9604083018561262d565b905060018060a01b03831660208301529392505050565b6000806040838503121561291357600080fd5b61291c836125ef565b946020939093013593505050565b8681526001600160a01b038616602082015260c0604082018190526000906129549083018761262d565b8281036060840152612966818761262d565b905084608084015282810360a0840152612980818561262d565b9998505050505050505050565b600080602083850312156129a057600080fd5b823567ffffffffffffffff808211156129b857600080fd5b818501915085601f8301126129cc57600080fd5b8135818111156129db57600080fd5b8660208260051b85010111156129f057600080fd5b60209290920196919550909350505050565b60008060008060008060006080888a031215612a1d57600080fd5b873567ffffffffffffffff80821115612a3557600080fd5b612a418b838c016126b9565b909950975060208a0135915080821115612a5a57600080fd5b612a668b838c016126b9565b909750955060408a0135915080821115612a7f57600080fd5b50612a8c8a828b016126b9565b989b979a50959894979596606090950135949350505050565b60008060008060008060006080888a031215612ac057600080fd5b873567ffffffffffffffff80821115612ad857600080fd5b612ae48b838c016126b9565b909950975060208a0135915080821115612afd57600080fd5b612b098b838c016126b9565b909750955060408a0135945060608a0135915080821115612b2957600080fd5b50612b368a828b016126b9565b989b979a50959850939692959293505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156128c857888303603f19018552815180518452878101516001600160a01b0316888501528681015160c088860181905290612bb18287018261262d565b91505060608083015186830382880152612bcb838261262d565b92505050608080830151818701525060a08083015192508582038187015250612bf4818361262d565b968901969450505090860190600101612b70565b600181811c90821680612c1c57607f821691505b602082108103612c3c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115611afe57600081815260208120601f850160051c81016020861015612c7f5750805b601f850160051c820191505b81811015612c9e57828155600101612c8b565b505050505050565b815167ffffffffffffffff811115612cc057612cc0612c42565b612cd481612cce8454612c08565b84612c58565b602080601f831160018114612d095760008415612cf15750858301515b600019600386901b1c1916600185901b178555612c9e565b600085815260208120601f198616915b82811015612d3857888601518255948401946001909101908401612d19565b5085821015612d565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103612d71575050565b612d7b8254612c08565b67ffffffffffffffff811115612d9357612d93612c42565b612da181612cce8454612c08565b6000601f821160018114612dd55760008315612dbd5750848201545b600019600385901b1c1916600184901b178455610f56565b600085815260209020601f19841690600086815260209020845b83811015612e0f5782860154825560019586019590910190602001612def565b5085831015612d565793015460001960f8600387901b161c19169092555050600190811b01905550565b8082018082111561257857634e487b7160e01b600052601160045260246000fdfeeca084ed86b520eca491ed9994ec9a94eba6ac20eca084ebacb8eca0902c203330eb858420eb82b4eab3b5ec9d9820eba79b68747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e4445794d545a664d5463782532464d4441784e7a4d304d7a41324e6a59774f4459772e685132684f6e69477969556658715f4a795a546b55366b7571433071703053426166764a74576431734b30672e4e763351436c684c7949307865682d69773467474b726a362d4d3074753634453568784471755543795049672e4a504547253246494d475f353839392e6a706726747970653d73633936305f38333268747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e5441304d6a6c664d544d312532464d4441784e7a51314f5441774d5451304e6a6b322e597442545551557751566e55424c456f6d67722d506767546f6454736e613654684362564b525768473467672e74743862503134734b4f3931556939395930474255394e7a4647464463534a724c705f4c744c3945795930672e504e47253246436861744750545f496d6167655f32303235253235423325323545325f34253235424625323546395f3239253235433025323543465f25323542462532354330253235433825323543345f30315f31345f30382e706e6726747970653d73633936305f383332ecb694ec96b5ec9d9820eba79b2c20eb96a1ebb3b6ec9db4ec998020eab980ebb0a568747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e5441314d4446664e4463672532464d4441784e7a51324d4451334f4467354f4459312e42626b6c4350354855415a7766646f4c4d4335766e636c644565336e58746b4d4b5879305f555075495134672e366637784f74534442424b53662d2d434d50394c4259564f4b44375644392d54594662567a4a763533306f672e504e4725324663623931346265622d613230622d343963362d626565652d3662626564656135646465312e706e6726747970653d73633936305f38333268747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e4445794d6a46664d6a45312532464d4441784e7a4d304e7a67774e7a45314f544d342e757377394156566e48787a465356735249663863756e6e6e726372506c703468374b625f325132794b6473672e35756736525735795f70357864484b61686f72476d73304f5441636559304b67686f6f623971737a6a4e4d672e4a50454725324625323542312532354538253235423925323545345f3032342e6a706726747970653d73633936305f38333268747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d6874747025334125324625324673686f7070696e672e7068696e662e6e617665722e6e65742532466d61696e5f3533333034343125324635333330343431313939332e332e32303235303330363130343635322e6a706726747970653d73633936305f383332a264697066735822122058a37286a877b8141d482d510455fe5813c70dba2fe5553129c3d82356665e8564736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c80638da5cb5b116100ec578063d7b1c0a91161008a578063e8a59cd811610064578063e8a59cd81461053f578063ed4d758e1461055f578063f00845531461057f578063f2fde38b1461059557600080fd5b8063d7b1c0a9146102d2578063e4f89b68146104f2578063e80fd77a1461051257600080fd5b8063b302368a116100c6578063b302368a14610464578063b4d7002514610496578063c710ea95146104a4578063ca37f772146104d257600080fd5b80638da5cb5b1461041d5780638dbe1a171461024e578063985751881461024e57600080fd5b8063416a933a116101595780635e3e554a116101335780635e3e554a146103b0578063715018a6146103de5780638129fc1c146103f357806388478c861461040857600080fd5b8063416a933a1461035d578063424731f4146102d25780635dc917f01461038e57600080fd5b80632765c626116101955780632765c626146102d25780632bcc23f8146102ed5780632d4e5ca71461031d57806338ad2f821461033d57600080fd5b80630518778c146101bc57806318c839171461024e5780631cf3cd0714610270575b600080fd5b3480156101c857600080fd5b506102136101d73660046125d6565b6008602052600090815260409020805460018201546002830154600384015460049094015492936001600160a01b039283169391831692169085565b604080519586526001600160a01b039485166020870152928416928501929092529091166060830152608082015260a0015b60405180910390f35b34801561025a57600080fd5b5061026e61026936600461260b565b6105b5565b005b34801561027c57600080fd5b506102b261028b3660046125d6565b60076020526000908152604090208054600282015460038301546004909301549192909184565b604080519485526020850193909352918301526060820152608001610245565b3480156102de57600080fd5b5061026e6102693660046125d6565b3480156102f957600080fd5b5061030d61030836600461260b565b6105f2565b6040516102459493929190612673565b34801561032957600080fd5b5061026e610338366004612702565b610739565b34801561034957600080fd5b5061026e610358366004612744565b61082f565b34801561036957600080fd5b5061037d61037836600461260b565b61098e565b6040516102459594939291906127b8565b34801561039a57600080fd5b506103a3610b5f565b6040516102459190612814565b3480156103bc57600080fd5b506103d06103cb36600461260b565b610d94565b6040516102459291906128d6565b3480156103ea57600080fd5b5061026e610e41565b3480156103ff57600080fd5b5061026e610e55565b34801561041457600080fd5b5061026e610f5d565b34801561042957600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610245565b34801561047057600080fd5b5061048461047f366004612900565b611b03565b6040516102459695949392919061292a565b61026e61026936600461298d565b3480156104b057600080fd5b506104c46104bf3660046125d6565b611cfb565b604051908152602001610245565b3480156104de57600080fd5b5061026e6104ed366004612a02565b611d1c565b3480156104fe57600080fd5b5061026e61050d366004612aa5565b611fa2565b34801561051e57600080fd5b5061053261052d36600461260b565b612184565b6040516102459190612b49565b34801561054b57600080fd5b5061037d61055a3660046125d6565b6123d9565b34801561056b57600080fd5b506104c461057a366004612900565b612418565b34801561058b57600080fd5b506104c460005481565b3480156105a157600080fd5b5061026e6105b036600461260b565b612449565b60405162461bcd60e51b815260206004820152600d60248201526c155b9a5b5c1b195b595b9d1959609a1b60448201526064015b60405180910390fd5b60026020526000908152604090208054819061060d90612c08565b80601f016020809104026020016040519081016040528092919081815260200182805461063990612c08565b80156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b505050600184015460028501805494956001600160a01b039092169491935091506106b090612c08565b80601f01602080910402602001604051908101604052809291908181526020018280546106dc90612c08565b80156107295780601f106106fe57610100808354040283529160200191610729565b820191906000526020600020905b81548152906001019060200180831161070c57829003601f168201915b5050505050908060030154905084565b336000908152600460205260409020805461075390612c08565b1590506107a25760405162461bcd60e51b815260206004820152601a60248201527f44656c6976657220616c7265616479207265676973746572656400000000000060448201526064016105e9565b6040805160606020601f8501819004028201810183529181018381529091829190859085908190850183828082843760009201829052509385525050336020938401819052825250600490915260409020815181906108019082612ca6565b5060209190910151600190910180546001600160a01b0319166001600160a01b039092169190911790555050565b336000908152600260205260409020805461084990612c08565b1590506108985760405162461bcd60e51b815260206004820152601760248201527f5573657220616c7265616479207265676973746572656400000000000000000060448201526064016105e9565b604051806080016040528086868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252503360208083019190915260408051601f87018390048302810183018252868152920191908690869081908401838280828437600092018290525093855250505060209182018490523381526002909152604090208151819061093e9082612ca6565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604082015160028201906109799082612ca6565b50606082015181600301559050505050505050565b600360205260009081526040902080546001820180546001600160a01b0390921692916109ba90612c08565b80601f01602080910402602001604051908101604052809291908181526020018280546109e690612c08565b8015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b505050505090806002015490806003018054610a4e90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7a90612c08565b8015610ac75780601f10610a9c57610100808354040283529160200191610ac7565b820191906000526020600020905b815481529060010190602001808311610aaa57829003601f168201915b505050505090806004018054610adc90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0890612c08565b8015610b555780601f10610b2a57610100808354040283529160200191610b55565b820191906000526020600020905b815481529060010190602001808311610b3857829003601f168201915b5050505050905085565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610d8b5760008481526020908190206040805160a081019091526005850290910180546001600160a01b031682526001810180549293919291840191610bcc90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf890612c08565b8015610c455780601f10610c1a57610100808354040283529160200191610c45565b820191906000526020600020905b815481529060010190602001808311610c2857829003601f168201915b5050505050815260200160028201548152602001600382018054610c6890612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9490612c08565b8015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b50505050508152602001600482018054610cfa90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2690612c08565b8015610d735780601f10610d4857610100808354040283529160200191610d73565b820191906000526020600020905b815481529060010190602001808311610d5657829003601f168201915b50505050508152505081526020019060010190610b83565b50505050905090565b600460205260009081526040902080548190610daf90612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054610ddb90612c08565b8015610e285780601f10610dfd57610100808354040283529160200191610e28565b820191906000526020600020905b815481529060010190602001808311610e0b57829003601f168201915b505050600190930154919250506001600160a01b031682565b610e49612487565b610e5360006124e2565b565b6000610e5f612553565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610e875750825b905060008267ffffffffffffffff166001148015610ea45750303b155b905081158015610eb2575080155b15610ed05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610efa57845460ff60401b1916600160401b1785555b610f033361257e565b610f0b610f5d565b60016000558315610f5657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b610f65612487565b6040805160c081018252600960808201908152681d57301d96541d911360bb1b60a0830152815273c638cff5173be947494207fe67b76460ebeaa23f602080830182905283518085018552601d81527fec849cec9ab8ec8b9c20eab095eb82a8eab5ac20ec97adec82bceb8f99000000818301529383019390935260016060830152600052600290915280517fd1da8ca8f339b260695aee18b6d8ac988db01c7397319e6b4a86adfb01acacbd90819061101f9082612ca6565b5060208201516001820180546001600160a01b0319166001600160a01b039092169190911790556040820151600282019061105a9082612ca6565b50606082015181600301559050506040518060a0016040528073c638cff5173be947494207fe67b76460ebeaa23f6001600160a01b031681526020016040518060400160405280602081526020017fec849cec9ab8ec8b9c20eab095eb82a8eab5ac20ed858ced97a4eb9e80eba19c8152508152602001600281526020016040518060400160405280600c81526020016b0ed99a9eab888ebb098eca0960a41b8152508152602001604051806060016040528060328152602001612e5b60329139905273c638cff5173be947494207fe67b76460ebeaa23f6000526003602090815281517f8e1c89b3fead8a93669f80bca42c9c459a70cf9f9bc2ac488867e50ac237f67180546001600160a01b0319166001600160a01b03909216919091178155908201517f8e1c89b3fead8a93669f80bca42c9c459a70cf9f9bc2ac488867e50ac237f672906111ac9082612ca6565b5060408201516002820155606082015160038201906111cb9082612ca6565b50608082015160048201906111e09082612ca6565b509050506040518060a00160405280739206a132ae7ffa929f50ef8551c21b387f5234c76001600160a01b031681526020016040518060400160405280601d81526020017fec849cec9ab8ec8b9c20ec849cecb488eab5ac20ebb098ed8faceb8f990000008152508152602001600381526020016040518060400160405280600c81526020016beba79beb8298ebb684ec8b9d60a01b81525081526020016040518060600160405280602281526020016130b3602291399052739206a132ae7ffa929f50ef8551c21b387f5234c76000526003602090815281517f2fe2541f3252a6e9441186d3bbc154c5ea7b7e0cbce2a6573e15f98b15b32a6a80546001600160a01b0319166001600160a01b03909216919091178155908201517f2fe2541f3252a6e9441186d3bbc154c5ea7b7e0cbce2a6573e15f98b15b32a6b906113289082612ca6565b5060408201516002820155606082015160038201906113479082612ca6565b506080820151600482019061135c9082612ca6565b505060408051608081018252600c9181019182526b1d91549db2979d72739d74f560a31b6060820152908152731fff36faba6bd6507a08d3296ef60e4fd6b1509560208083018290526000919091526004905280519091507f1945f37ee62370e499a1865bd2a17b62a154803a62fc3b3828c65c7cabf39ac79081906113e29082612ca6565b5060209182015160019190910180546001600160a01b0319166001600160a01b0390921691909117905573c638cff5173be947494207fe67b76460ebeaa23f6000818152600583526040805160c081018252918252818401929092528151808301835260098152683b29e73b27a97aea6d60ba1b818501528183015281518083018352601d81527feab8b0ebb3b8ec979020ecb6a9ec8ba4ed959c20eca79cec9ea5eba9b4000000818501526060820152611b586080820152815161016081019092526101388083527f9d73629023593ab2528f17e6f1dffc9ce319c3437c0ba3ea9577a9a778d5c18b93919260a0840192909190612f7b908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b03909416939093179092556040810151909190600282019061153b9082612ca6565b50606082015160038201906115509082612ca6565b506080820151600482015560a0820151600582019061156f9082612ca6565b505073c638cff5173be947494207fe67b76460ebeaa23f6000819052600560209081526040805160c0810182526001815280830193909352805180820182526006815265eca7acebbd9560d01b818401528382015280518082018252601d81527fec96bced81b0ed9598eab3a020ec8b9cec9b90ed959c20eca7acebbd9500000081840152606084015261232860808401528051610120810190915260ee8082527f9d73629023593ab2528f17e6f1dffc9ce319c3437c0ba3ea9577a9a778d5c18b945060a0840192612e8d908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b03909416939093179092556040810151909190600282019061169c9082612ca6565b50606082015160038201906116b19082612ca6565b506080820151600482015560a082015160058201906116d09082612ca6565b5050739206a132ae7ffa929f50ef8551c21b387f5234c76000818152600560209081526040805160c081018252928352828201939093528251808401845260098152683ae5a87aecedbb276d60ba1b818301528284015282518084018452601d81527feba7a4ecbda4eb8bacecbda4ed959c20eab5adebafbc20eab084ec8b9d0000008183015260608301526113886080830152825161014081019093526101098084527f1653958163627abfda763d15a3b05480f6046276a44266f63d93e403b829f40c9450919260a084019290916130d5908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b0390941693909317909255604081015190919060028201906118049082612ca6565b50606082015160038201906118199082612ca6565b506080820151600482015560a082015160058201906118389082612ca6565b5050739206a132ae7ffa929f50ef8551c21b387f5234c76000819052600560209081526040805160c0810182526001815280830193909352805180820182526006815265eab980ebb0a560d01b818401528382015280518082018252601f81527fec868dec9db420eabd8920ecb0ac20eba79bec9e88eb8a9420eab980ebb0a500818401526060840152610bb860808401528051610120810190915260fe8082527f1653958163627abfda763d15a3b05480f6046276a44266f63d93e403b829f40c945060a08401926131de908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b0390941693909317909255604081015190919060028201906119659082612ca6565b506060820151600382019061197a9082612ca6565b506080820151600482015560a082015160058201906119999082612ca6565b5050739206a132ae7ffa929f50ef8551c21b387f5234c76000819052600560209081526040805160c08082018352600282528184019490945281518083018352600681526501d91139d71960d71b818501528183015281518083018352601d81527fecab84eab983ed9598eab3a020eab3a0ec868ced959c20ec889ceb8c80000000818501526060820152610fa060808201528151938401909152608d8084527f1653958163627abfda763d15a3b05480f6046276a44266f63d93e403b829f40c9450909260a08401929091906132dc908301399052815460018082018455600093845260209384902083516006909302019182559282015192810180546001600160a01b0319166001600160a01b039094169390931790925560408101519091906002820190611aca9082612ca6565b5060608201516003820190611adf9082612ca6565b506080820151600482015560a08201516005820190611afe9082612ca6565b505050565b60056020528160005260406000208181548110611b1f57600080fd5b60009182526020909120600690910201805460018201546002830180549295506001600160a01b03909116935090611b5690612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8290612c08565b8015611bcf5780601f10611ba457610100808354040283529160200191611bcf565b820191906000526020600020905b815481529060010190602001808311611bb257829003601f168201915b505050505090806003018054611be490612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1090612c08565b8015611c5d5780601f10611c3257610100808354040283529160200191611c5d565b820191906000526020600020905b815481529060010190602001808311611c4057829003601f168201915b505050505090806004015490806005018054611c7890612c08565b80601f0160208091040260200160405190810160405280929190818152602001828054611ca490612c08565b8015611cf15780601f10611cc657610100808354040283529160200191611cf1565b820191906000526020600020905b815481529060010190602001808311611cd457829003601f168201915b5050505050905086565b60098181548110611d0b57600080fd5b600091825260209091200154905081565b336000908152600360208190526040909120018054611d3a90612c08565b159050611d895760405162461bcd60e51b815260206004820152601860248201527f53746f726520616c72656164792072656769737465726564000000000000000060448201526064016105e9565b6040518060a00160405280336001600160a01b0316815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820184905260408051601f8b0183900483028101830182528a8152920191908a908a9081908401838280828437600092019190915250505090825250604080516020601f8901819004810282018101909252878152918101919088908890819084018382808284376000920182905250939094525050338152600360209081526040909120835181546001600160a01b0319166001600160a01b03909116178155908301519091506001820190611e969082612ca6565b506040820151600282015560608201516003820190611eb59082612ca6565b5060808201516004820190611eca9082612ca6565b505033600090815260036020526040812060018054808201825592819052815460059093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810180546001600160a01b0319166001600160a01b03959095169490941784559193507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790910190611f6490840182612d66565b506002820154816002015560038201816003019081611f839190612d66565b50600481810190611f9690840182612d66565b50505050505050505050565b336000908152600360208190526040909120018054611fc090612c08565b90506000036120045760405162461bcd60e51b815260206004820152601060248201526f4e6f7420666f756e642073746f72657360801b60448201526064016105e9565b3360009081526005602052604090819020815160c0810190925280549091908190612030906001612e39565b8152602001336001600160a01b0316815260200189898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250602080820187905260408051601f87018390048302810183018252868152920191908690869081908401838280828437600092018290525093909452505083546001808201865594825260209182902084516006909202019081559083015193810180546001600160a01b0319166001600160a01b039095169490941790935550604081015190919060028201906121509082612ca6565b50606082015160038201906121659082612ca6565b506080820151600482015560a08201516005820190611f969082612ca6565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b828210156123ce5760008481526020908190206040805160c081018252600686029092018054835260018101546001600160a01b0316938301939093526002830180549293929184019161220f90612c08565b80601f016020809104026020016040519081016040528092919081815260200182805461223b90612c08565b80156122885780601f1061225d57610100808354040283529160200191612288565b820191906000526020600020905b81548152906001019060200180831161226b57829003601f168201915b505050505081526020016003820180546122a190612c08565b80601f01602080910402602001604051908101604052809291908181526020018280546122cd90612c08565b801561231a5780601f106122ef5761010080835404028352916020019161231a565b820191906000526020600020905b8154815290600101906020018083116122fd57829003601f168201915b505050505081526020016004820154815260200160058201805461233d90612c08565b80601f016020809104026020016040519081016040528092919081815260200182805461236990612c08565b80156123b65780601f1061238b576101008083540402835291602001916123b6565b820191906000526020600020905b81548152906001019060200180831161239957829003601f168201915b505050505081525050815260200190600101906121bc565b505050509050919050565b600181815481106123e957600080fd5b6000918252602090912060059091020180546001820180546001600160a01b039092169350906109ba90612c08565b6006602052816000526040600020818154811061243457600080fd5b90600052602060002001600091509150505481565b612451612487565b6001600160a01b03811661247b57604051631e4fbdf760e01b8152600060048201526024016105e9565b612484816124e2565b50565b336124b97f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610e535760405163118cdaa760e01b81523360048201526024016105e9565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b61258661258f565b612484816125b4565b6125976125bc565b610e5357604051631afcd79f60e31b815260040160405180910390fd5b61245161258f565b60006125c6612553565b54600160401b900460ff16919050565b6000602082840312156125e857600080fd5b5035919050565b80356001600160a01b038116811461260657600080fd5b919050565b60006020828403121561261d57600080fd5b612626826125ef565b9392505050565b6000815180845260005b8181101561265357602081850181015186830182015201612637565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000612686608083018761262d565b6001600160a01b038616602084015282810360408401526126a7818661262d565b91505082606083015295945050505050565b60008083601f8401126126cb57600080fd5b50813567ffffffffffffffff8111156126e357600080fd5b6020830191508360208285010111156126fb57600080fd5b9250929050565b6000806020838503121561271557600080fd5b823567ffffffffffffffff81111561272c57600080fd5b612738858286016126b9565b90969095509350505050565b60008060008060006060868803121561275c57600080fd5b853567ffffffffffffffff8082111561277457600080fd5b61278089838a016126b9565b9097509550602088013591508082111561279957600080fd5b506127a6888289016126b9565b96999598509660400135949350505050565b6001600160a01b038616815260a0602082018190526000906127dc9083018761262d565b85604084015282810360608401526127f4818661262d565b90508281036080840152612808818561262d565b98975050505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156128c857888303603f19018552815180516001600160a01b031684528781015160a0898601819052906128748287018261262d565b915050878201518886015260608083015186830382880152612896838261262d565b92505050608080830151925085820381870152506128b4818361262d565b96890196945050509086019060010161283b565b509098975050505050505050565b6040815260006128e9604083018561262d565b905060018060a01b03831660208301529392505050565b6000806040838503121561291357600080fd5b61291c836125ef565b946020939093013593505050565b8681526001600160a01b038616602082015260c0604082018190526000906129549083018761262d565b8281036060840152612966818761262d565b905084608084015282810360a0840152612980818561262d565b9998505050505050505050565b600080602083850312156129a057600080fd5b823567ffffffffffffffff808211156129b857600080fd5b818501915085601f8301126129cc57600080fd5b8135818111156129db57600080fd5b8660208260051b85010111156129f057600080fd5b60209290920196919550909350505050565b60008060008060008060006080888a031215612a1d57600080fd5b873567ffffffffffffffff80821115612a3557600080fd5b612a418b838c016126b9565b909950975060208a0135915080821115612a5a57600080fd5b612a668b838c016126b9565b909750955060408a0135915080821115612a7f57600080fd5b50612a8c8a828b016126b9565b989b979a50959894979596606090950135949350505050565b60008060008060008060006080888a031215612ac057600080fd5b873567ffffffffffffffff80821115612ad857600080fd5b612ae48b838c016126b9565b909950975060208a0135915080821115612afd57600080fd5b612b098b838c016126b9565b909750955060408a0135945060608a0135915080821115612b2957600080fd5b50612b368a828b016126b9565b989b979a50959850939692959293505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156128c857888303603f19018552815180518452878101516001600160a01b0316888501528681015160c088860181905290612bb18287018261262d565b91505060608083015186830382880152612bcb838261262d565b92505050608080830151818701525060a08083015192508582038187015250612bf4818361262d565b968901969450505090860190600101612b70565b600181811c90821680612c1c57607f821691505b602082108103612c3c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115611afe57600081815260208120601f850160051c81016020861015612c7f5750805b601f850160051c820191505b81811015612c9e57828155600101612c8b565b505050505050565b815167ffffffffffffffff811115612cc057612cc0612c42565b612cd481612cce8454612c08565b84612c58565b602080601f831160018114612d095760008415612cf15750858301515b600019600386901b1c1916600185901b178555612c9e565b600085815260208120601f198616915b82811015612d3857888601518255948401946001909101908401612d19565b5085821015612d565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103612d71575050565b612d7b8254612c08565b67ffffffffffffffff811115612d9357612d93612c42565b612da181612cce8454612c08565b6000601f821160018114612dd55760008315612dbd5750848201545b600019600385901b1c1916600184901b178455610f56565b600085815260209020601f19841690600086815260209020845b83811015612e0f5782860154825560019586019590910190602001612def565b5085831015612d565793015460001960f8600387901b161c19169092555050600190811b01905550565b8082018082111561257857634e487b7160e01b600052601160045260246000fdfeeca084ed86b520eca491ed9994ec9a94eba6ac20eca084ebacb8eca0902c203330eb858420eb82b4eab3b5ec9d9820eba79b68747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e4445794d545a664d5463782532464d4441784e7a4d304d7a41324e6a59774f4459772e685132684f6e69477969556658715f4a795a546b55366b7571433071703053426166764a74576431734b30672e4e763351436c684c7949307865682d69773467474b726a362d4d3074753634453568784471755543795049672e4a504547253246494d475f353839392e6a706726747970653d73633936305f38333268747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e5441304d6a6c664d544d312532464d4441784e7a51314f5441774d5451304e6a6b322e597442545551557751566e55424c456f6d67722d506767546f6454736e613654684362564b525768473467672e74743862503134734b4f3931556939395930474255394e7a4647464463534a724c705f4c744c3945795930672e504e47253246436861744750545f496d6167655f32303235253235423325323545325f34253235424625323546395f3239253235433025323543465f25323542462532354330253235433825323543345f30315f31345f30382e706e6726747970653d73633936305f383332ecb694ec96b5ec9d9820eba79b2c20eb96a1ebb3b6ec9db4ec998020eab980ebb0a568747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e5441314d4446664e4463672532464d4441784e7a51324d4451334f4467354f4459312e42626b6c4350354855415a7766646f4c4d4335766e636c644565336e58746b4d4b5879305f555075495134672e366637784f74534442424b53662d2d434d50394c4259564f4b44375644392d54594662567a4a763533306f672e504e4725324663623931346265622d613230622d343963362d626565652d3662626564656135646465312e706e6726747970653d73633936305f38333268747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d68747470253341253246253246626c6f6766696c65732e6e617665722e6e65742532464d6a41794e4445794d6a46664d6a45312532464d4441784e7a4d304e7a67774e7a45314f544d342e757377394156566e48787a465356735249663863756e6e6e726372506c703468374b625f325132794b6473672e35756736525735795f70357864484b61686f72476d73304f5441636559304b67686f6f623971737a6a4e4d672e4a50454725324625323542312532354538253235423925323545345f3032342e6a706726747970653d73633936305f38333268747470733a2f2f7365617263682e707374617469632e6e65742f636f6d6d6f6e2f3f7372633d6874747025334125324625324673686f7070696e672e7068696e662e6e617665722e6e65742532466d61696e5f3533333034343125324635333330343431313939332e332e32303235303330363130343635322e6a706726747970653d73633936305f383332a264697066735822122058a37286a877b8141d482d510455fe5813c70dba2fe5553129c3d82356665e8564736f6c63430008140033",
  "devdoc": {
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 584,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "wti_price",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 588,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "stores",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Store)535_storage)dyn_storage"
      },
      {
        "astId": 593,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "userMap",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(User)524_storage)"
      },
      {
        "astId": 598,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "storeMap",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Store)535_storage)"
      },
      {
        "astId": 603,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "deliverMap",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Deliver)565_storage)"
      },
      {
        "astId": 609,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "storeMenuMap",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(Menu)548_storage)dyn_storage)"
      },
      {
        "astId": 614,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "userOrderMap",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 619,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "orderMap",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Order)560_storage)"
      },
      {
        "astId": 624,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "deliveryRequestMap",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_struct(Delivery_Request)576_storage)"
      },
      {
        "astId": 627,
        "contract": "contracts/Protocol.sol:Protocol",
        "label": "pending_delivery",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_int256)dyn_storage": {
        "base": "t_int256",
        "encoding": "dynamic_array",
        "label": "int256[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Menu)548_storage)dyn_storage": {
        "base": "t_struct(Menu)548_storage",
        "encoding": "dynamic_array",
        "label": "struct Menu[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Store)535_storage)dyn_storage": {
        "base": "t_struct(Store)535_storage",
        "encoding": "dynamic_array",
        "label": "struct Store[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(Menu)548_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Menu[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Menu)548_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Deliver)565_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Deliver)",
        "numberOfBytes": "32",
        "value": "t_struct(Deliver)565_storage"
      },
      "t_mapping(t_address,t_struct(Store)535_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Store)",
        "numberOfBytes": "32",
        "value": "t_struct(Store)535_storage"
      },
      "t_mapping(t_address,t_struct(User)524_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)524_storage"
      },
      "t_mapping(t_uint256,t_struct(Delivery_Request)576_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Delivery_Request)",
        "numberOfBytes": "32",
        "value": "t_struct(Delivery_Request)576_storage"
      },
      "t_mapping(t_uint256,t_struct(Order)560_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)560_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Deliver)565_storage": {
        "encoding": "inplace",
        "label": "struct Deliver",
        "members": [
          {
            "astId": 562,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 564,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "addr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Delivery_Request)576_storage": {
        "encoding": "inplace",
        "label": "struct Delivery_Request",
        "members": [
          {
            "astId": 567,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 569,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "user_addr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 571,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "store_addr",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 573,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "deliver_addr",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 575,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "order_index",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Menu)548_storage": {
        "encoding": "inplace",
        "label": "struct Menu",
        "members": [
          {
            "astId": 537,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 539,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "store_address",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 541,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 543,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 545,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_int256"
          },
          {
            "astId": 547,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "image_url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Order)560_storage": {
        "encoding": "inplace",
        "label": "struct Order",
        "members": [
          {
            "astId": 550,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 553,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "menu",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_int256)dyn_storage"
          },
          {
            "astId": 555,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "total_price",
            "offset": 0,
            "slot": "2",
            "type": "t_int256"
          },
          {
            "astId": 557,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "request_index",
            "offset": 0,
            "slot": "3",
            "type": "t_int256"
          },
          {
            "astId": 559,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "delivery_fee",
            "offset": 0,
            "slot": "4",
            "type": "t_int256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Store)535_storage": {
        "encoding": "inplace",
        "label": "struct Store",
        "members": [
          {
            "astId": 526,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 528,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "location",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 530,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "pos",
            "offset": 0,
            "slot": "2",
            "type": "t_int256"
          },
          {
            "astId": 532,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 534,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "description",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(User)524_storage": {
        "encoding": "inplace",
        "label": "struct User",
        "members": [
          {
            "astId": 517,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 519,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "addr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 521,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "location",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 523,
            "contract": "contracts/Protocol.sol:Protocol",
            "label": "pos",
            "offset": 0,
            "slot": "3",
            "type": "t_int256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}